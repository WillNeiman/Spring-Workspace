package com.ezen.biz.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.ezen.biz.DTO.UserVO;
import com.ezen.biz.common.JDBCUtil;

@Repository("usersDAO")
public class UserDAO {
	
	@Autowired
	JdbcTemplate jdbcTemplate;
	
	// CRUD
	// 회원 등록
	public void insertUser(UserVO user) {
		System.out.println("===> JDBC로 insertUser() 처리");
		String sql = "insert into users(id, password, name, role) " +
				"values(?, ?, ?, ? )";
		Object[] args = {user.getId(), user.getPassword(), user.getName(), user.getRole()};
		jdbcTemplate.update(sql, args);
	}
	
	// 회원 수정
	public void updateUser(UserVO user) {
		System.out.println("===> JDBC로 updateUser() 처리");
		String sql = "update users set password=?, name=?, role=? " +
						"where id=?";
		Object[] args = {user.getPassword(), user.getName(), user.getRole(), user.getId()};
		jdbcTemplate.update(sql, args);
	}
	
	// 회원 삭제
	public void deleteUser(UserVO user) {
		System.out.println("===> JDBC로 deleteUser() 처리");
		String sql = "delete from users where seq = ?";
		Object[] args = {user.getId()};
		jdbcTemplate.update(sql, args);

	}
	
	// 회원 조회 - seq 번호에 의한 조회
	public UserVO getUser(UserVO user) {
		System.out.println("===> JDBC로 getUser() 처리");
		String sql = "select * from users where id = ?";
		this.conn = JDBCUtil.getConnection();
		UserVO result = new UserVO();
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, user.getId());
			rs = pstmt.executeQuery();
			if(rs.next()) {				 
				result.setId(rs.getString("id"));
				result.setPassword(rs.getString("password"));
				result.setName(rs.getString("name"));
				result.setRole(rs.getString("role"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {JDBCUtil.close(pstmt, conn, rs);	
		}
		return result;
	}
	
	// 회원 목록 조회
	public List<UserVO> getUserList() {
		System.out.println("===> JDBC로 getUserList() 처리");
		String sql = "select * from users";
		this.conn = JDBCUtil.getConnection();
		List<UserVO> userList = new ArrayList<>();
		try {
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			while(rs.next()) {
				UserVO user = new UserVO();
				user.setId(rs.getString("id"));
				user.setPassword(rs.getString("password"));
				user.setName(rs.getString("name"));
				user.setRole(rs.getString("role"));
				userList.add(user);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {JDBCUtil.close(pstmt, conn, rs);	
		}
		return userList;
	}
}
